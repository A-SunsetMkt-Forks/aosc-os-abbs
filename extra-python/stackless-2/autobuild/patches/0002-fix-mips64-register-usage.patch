diff -Naur stackless-2.7.16-slp/Stackless/platf/switch_mips_unix.h stackless-2.7.16-slp-patch/Stackless/platf/switch_mips_unix.h
--- stackless-2.7.16-slp/Stackless/platf/switch_mips_unix.h	2019-03-09 03:47:11.000000000 -0800
+++ stackless-2.7.16-slp-patch/Stackless/platf/switch_mips_unix.h	2020-11-10 17:56:54.421581021 -0800
@@ -12,14 +12,14 @@
 
 #define STACK_MAGIC 0
 
-#ifdef __mips64
+// $28 may be used as PIC helper register
+#if defined(__mips64) && !defined(__PIC__)
 #define REGS_TO_SAVE "$16", "$17", "$18", "$19", "$20", "$21", "$22", \
        "$23", "$28", "$30"
 #else
 #define REGS_TO_SAVE "$16", "$17", "$18", "$19", "$20", "$21", "$22", \
-       "$23", "$30"
+       "$23"
 #endif
-    __asm__ volatile ("" : : : REGS_TO_SAVE);
 /*
  * You may want to make the function static enable optimizations.
  * However, the ABI SPEC does not apply to static functions. Therefore
@@ -32,7 +32,7 @@
 slp_switch(void)
 {
     register int *stackref, stsizediff;
-    /* __asm__ __volatile__ ("" : : : REGS_TO_SAVE); */
+    __asm__ __volatile__ ("" : : : REGS_TO_SAVE);
     __asm__ ("move %0, $29" : "=r" (stackref) : );
     {
         SLP_SAVE_STATE(stackref, stsizediff);
