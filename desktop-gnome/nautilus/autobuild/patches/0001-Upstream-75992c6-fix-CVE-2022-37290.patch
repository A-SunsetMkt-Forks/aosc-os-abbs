From 75992c6797094413a546c5b4867b13450b2a1959 Mon Sep 17 00:00:00 2001
From: Corey Berla <corey@berla.me>
Date: Fri, 25 Nov 2022 15:21:58 -0800
Subject: [PATCH] file-operation: Return early when basename is NULL

Calling g_utf8_validate() on a NULL string crashes Nautilus.  This
can occur if performing an operation on an invalid file. If
basename is NULL, there's nothing we would do anyways, so just
return early and prevent the crash.

There's a similar issue with get_unique_target_file(), but
if a bad uri was passed to this function it should fail much
earlier, so lets just add an assertion.

Fixes: https://gitlab.gnome.org/GNOME/nautilus/-/issues/2376
---
 src/nautilus-file-operations.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/nautilus-file-operations.c b/src/nautilus-file-operations.c
index 8c41b7eac3..f223f93735 100644
--- a/src/nautilus-file-operations.c
+++ b/src/nautilus-file-operations.c
@@ -1022,6 +1022,11 @@ get_basename (GFile *file)
     if (name == NULL)
     {
         basename = g_file_get_basename (file);
+        if (basename == NULL)
+        {
+            return g_strdup (_("unknown"));
+        }
+
         if (g_utf8_validate (basename, -1, NULL))
         {
             name = basename;
@@ -4385,6 +4390,7 @@ get_unique_target_file (GFile      *src,
     if (dest == NULL)
     {
         basename = g_file_get_basename (src);
+        g_assert (basename == NULL);
 
         if (g_utf8_validate (basename, -1, NULL))
         {
-- 
GitLab

