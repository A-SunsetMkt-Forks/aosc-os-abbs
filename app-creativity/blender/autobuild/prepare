# FIXME: workaround incorrect vectorization on PPC64.
if [[ "${CROSS:-$ARCH}" = "ppc64" ]]; then
    export CFLAGS="${CFLAGS/-maltivec -maltivec=be -mabi=altivec/} -mno-altivec -fno-tree-vectorize"
    export CXXFLAGS="${CXXFLAGS/-maltivec -maltivec=be -mabi=altivec/} -mno-altivec -fno-tree-vectorize"
fi

if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    source /etc/profile.d/cuda.sh
fi

if [[ "${CROSS:-$ARCH}" = "ppc64el" ]]; then
    export CFLAGS="${CFLAGS} -D__LITTLE_ENDIAN=1 -DARCH_CPU_LITTLE_ENDIAN=1"
    export CXXFLAGS="${CXXFLAGS} -D__LITTLE_ENDIAN=1 -DARCH_CPU_LITTLE_ENDIAN=1"
fi

if [[ "${CROSS:-$ARCH}" = "loongson3" ]]; then
    abinfo "Undefining mips to fix build ..."
    export CFLAGS="${CFLAGS} -Umips"
    export CXXFLAGS="${CXXFLAGS} -Umips"
fi

# FIXME: remove this when nvcc supports GCC 13
abinfo "HACK: working around NVCC compatibility issues ..."
NVCC_VER="$(/usr/lib/cuda/bin/nvcc --version | perl -ne '/V(\d+\.\d+\.\d+)/ && print"$1"')"
if ! dpkg --compare-versions "$NVCC_VER" 'le' '12.3.0'; then
    abdie "ERR! Please re-check if NVCC still needs this workaround!"
fi
patch -d /usr/include/c++/13.2.0/ -Np1 -i "$SRCDIR"/autobuild/patches/*.patch.deferred
