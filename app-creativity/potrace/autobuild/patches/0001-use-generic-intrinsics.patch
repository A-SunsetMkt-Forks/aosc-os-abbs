--- a/src/bitops.h	2023-10-27 10:47:13.658074061 +0800
+++ b/src/bitops.h	2023-10-27 10:47:43.830123867 +0800
@@ -19,65 +19,13 @@
 #include <config.h>
 #endif
 
-/* ---------------------------------------------------------------------- */
-/* machine specific macros */
-
-#if defined(HAVE_I386)
-
+/* generic macros */
 static inline unsigned int lobit(unsigned int x) {
-  unsigned int res;
-  asm ("bsf	%1,%0\n\t"
-       "jnz	0f\n\t"
-       "movl	$32,%0\n"
-       "0:"
-       : "=r" (res)
-       : "r" (x)
-       : "cc");
-  return res;
+  return x == 0 ? 32 : __builtin_ffs(x) - 1;
 }
 
 static inline unsigned int hibit(unsigned int x) {
-  unsigned int res;					
-
-  asm ("bsr	%1,%0\n\t"
-       "jnz	0f\n\t"
-       "movl	$-1,%0\n"
-       "0:"
-       : "=r" (res)
-       : "r" (x)
-       : "cc");
-  return res+1;
+  return x == 0 ? 0 : 32 - __builtin_clz(x);
 }
 
-/* ---------------------------------------------------------------------- */
-#else /* generic macros */
-
-static inline unsigned int lobit(unsigned int x) {
-  unsigned int res = 32;
-  while (x & 0xffffff) {
-    x <<= 8;
-    res -= 8;
-  }
-  while (x) {
-    x <<= 1;
-    res -= 1;
-  }
-  return res;
-}
-
-static inline unsigned int hibit(unsigned int x) {
-  unsigned int res = 0;
-  while (x > 0xff) {
-    x >>= 8;
-    res += 8;
-  }
-  while (x) {
-    x >>= 1;
-    res += 1;
-  }
-  return res;
-}
-
-#endif 
-
 #endif /* BITOPS_H */
