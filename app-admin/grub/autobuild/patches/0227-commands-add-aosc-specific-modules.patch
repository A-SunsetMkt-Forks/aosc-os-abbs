From e8d6b52b1c84614aa274a15933c596223633df56 Mon Sep 17 00:00:00 2001
From: Cyan <cyanoxygen@aosc.io>
Date: Fri, 7 Jul 2023 21:55:24 +0800
Subject: [PATCH] commands: add aosc specific modules

phymem is a command to get the total amount of system memory. It
traverses the entire GRUB memory map, adds them up, the result is just
the mount of total system memory.

echoerr is a command to raise GRUB errors.
---
 grub-core/Makefile.core.def  | 10 +++++
 grub-core/commands/echoerr.c | 54 ++++++++++++++++++++++++++
 grub-core/commands/phymem.c  | 73 ++++++++++++++++++++++++++++++++++++
 include/grub/err.h           |  3 +-
 4 files changed, 139 insertions(+), 1 deletion(-)
 create mode 100644 grub-core/commands/echoerr.c
 create mode 100644 grub-core/commands/phymem.c

diff --git a/grub-core/Makefile.core.def b/grub-core/Makefile.core.def
index 8022e1c0a..3b944de91 100644
--- a/grub-core/Makefile.core.def
+++ b/grub-core/Makefile.core.def
@@ -873,6 +873,11 @@ module = {
   common = commands/echo.c;
 };
 
+module = {
+  name = echoerr;
+  common = commands/echoerr.c;
+};
+
 module = {
   name = eval;
   common = commands/eval.c;
@@ -1024,6 +1029,11 @@ module = {
   common = commands/password_pbkdf2.c;
 };
 
+module = {
+  name = phymem;
+  common = commands/phymem.c;
+};
+
 module = {
   name = play;
   x86 = commands/i386/pc/play.c;
diff --git a/grub-core/commands/echoerr.c b/grub-core/commands/echoerr.c
new file mode 100644
index 000000000..2646776b0
--- /dev/null
+++ b/grub-core/commands/echoerr.c
@@ -0,0 +1,54 @@
+/* echo.c - Command to display a line of text  */
+/*
+ *  GRUB  --  GRand Unified Bootloader
+ *  Copyright (C) 2006,2007,2010  Free Software Foundation, Inc.
+ *
+ *  GRUB is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  GRUB is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with GRUB.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <grub/dl.h>
+#include <grub/misc.h>
+#include <grub/extcmd.h>
+#include <grub/err.h>
+#include <grub/i18n.h>
+#include <grub/term.h>
+
+GRUB_MOD_LICENSE ("GPLv3+");
+
+static grub_err_t
+grub_cmd_echo_err (grub_extcmd_context_t ctxt, int argc, char **args)
+{
+  struct grub_arg_list *state = ctxt->state;
+  if (argc != 1) {
+    grub_error (GRUB_ERR_CUSTOM, "An error has occurred.");
+    return grub_errno;
+  } else {
+    grub_error (GRUB_ERR_CUSTOM, " %s", args[0]);
+    return grub_errno;
+  }
+}
+
+static grub_extcmd_t cmd;
+
+GRUB_MOD_INIT(echoerr)
+{
+  cmd = grub_register_extcmd ("echoerr", grub_cmd_echo_err, 0,
+			      "STRING", "Display a line of text for error.",
+			      0);
+}
+
+GRUB_MOD_FINI(echoerr)
+{
+  grub_unregister_extcmd (cmd);
+}
diff --git a/grub-core/commands/phymem.c b/grub-core/commands/phymem.c
new file mode 100644
index 000000000..a0b1ba9ed
--- /dev/null
+++ b/grub-core/commands/phymem.c
@@ -0,0 +1,73 @@
+/* phymem.c - Get the amount of system memory and save it to $total_mem */
+/* It traverses the entire grub memory map to get the total amount. */
+/*
+ *  GRUB  --  GRand Unified Bootloader
+ *  Copyright (C) 2003,2007  Free Software Foundation, Inc.
+ *  Copyright (C) 2003  NIIBE Yutaka <gniibe@m17n.org>
+ *
+ *  GRUB is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  GRUB is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with GRUB.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <grub/types.h>
+#include <grub/misc.h>
+#include <grub/memory.h>
+#include <grub/mm.h>
+#include <grub/err.h>
+#include <grub/dl.h>
+#include <grub/extcmd.h>
+#include <grub/i18n.h>
+
+GRUB_MOD_LICENSE ("GPLv3+");
+
+unsigned long long total_mem_bytes = 0ULL;
+
+static int
+traverse_mmap_hook (grub_uint64_t addr, grub_uint64_t size, grub_memory_type_t type,
+                    void *data __attribute__ ((unused)))
+{
+  total_mem_bytes += size;
+}
+
+static grub_err_t
+grub_cmd_phymem (grub_extcmd_context_t ctxt __attribute__ ((unused)),
+                int argc __attribute__ ((unused)),
+                char **args __attribute__ ((unused)))
+{
+#ifndef GRUB_MACHINE_EMU
+  if (total_mem_bytes == 0) {
+    grub_machine_mmap_iterate (traverse_mmap_hook, NULL);
+  }
+#endif
+  char *total_mem_mebibytes = grub_xasprintf ("%llu", total_mem_bytes / 0x100000);
+  if (!total_mem_mebibytes) {
+    total_mem_mebibytes = "0";
+  }
+  grub_printf_ (_("The total system memory is %s MiB.\n"), total_mem_mebibytes);
+  grub_env_set ("total_mem", total_mem_mebibytes);
+  grub_env_export ("total_mem");
+  return 0;
+}
+
+static grub_extcmd_t cmd;
+
+GRUB_MOD_INIT(phymem)
+{
+  cmd = grub_register_extcmd ("phymem", grub_cmd_phymem, 0, 0,
+                              N_("Get total physical memory in MiB."), 0);
+}
+
+GRUB_MOD_FINI(phymem)
+{
+  grub_unregister_extcmd (cmd);
+}
diff --git a/include/grub/err.h b/include/grub/err.h
index b08d5d0de..8e1ff196d 100644
--- a/include/grub/err.h
+++ b/include/grub/err.h
@@ -72,7 +72,8 @@ typedef enum
     GRUB_ERR_NET_PACKET_TOO_BIG,
     GRUB_ERR_NET_NO_DOMAIN,
     GRUB_ERR_EOF,
-    GRUB_ERR_BAD_SIGNATURE
+    GRUB_ERR_BAD_SIGNATURE,
+    GRUB_ERR_CUSTOM
   }
 grub_err_t;
 
-- 
2.39.1

